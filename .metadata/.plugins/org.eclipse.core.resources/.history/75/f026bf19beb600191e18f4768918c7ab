package com.org.shoppingcart.service.impl;

import java.util.Collections;

import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;
import org.springframework.web.client.RestTemplate;

import com.google.gson.Gson;
import com.org.shoppingcart.controller.util.REST_CONTROLLER_URL;
import com.org.shoppingcart.controller.util.ServiceManager;
import com.org.shoppingcart.dto.ProductDto;
import com.org.shoppingcart.request.ProductRequest;
import com.org.shoppingcart.response.ProductResponse;

public class ProductServiceImpl extends ServiceManager {

	private static final long serialVersionUID = 1L;

	public ProductResponse findAll() {
		try {
			final String restURL = getValMessage().getString("shopping.cart.rest.url")
					+ getValMessage().getString("shopping.cart.getallitems.url");
			restTemplate = new RestTemplate();
			String strResponse = restTemplate.getForObject(restURL, String.class);
			Gson gson = new Gson();
			return gson.fromJson(strResponse, ProductResponse.class);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return new ProductResponse();
	}

	public ProductResponse checkoutItems(ProductRequest productDtos) {
		try {

			final String uri = getValMessage().getString("shopping.cart.rest.url")
					+ getValMessage().getString("shopping.cart.submititems.url");
			RestTemplate restTemplate = new RestTemplate();
			Gson gson = new Gson();
			String input = gson.toJson(productDtos);

			HttpHeaders headers = new HttpHeaders();
			headers.setContentType(MediaType.APPLICATION_JSON);
			headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON));

			HttpEntity<String> entity = new HttpEntity<String>(input, headers);

			// send request and parse result
			ResponseEntity<String> response = restTemplate.exchange(uri, HttpMethod.POST, entity, String.class);

			System.out.println(response);

			/*
			 * restTemplate = new RestTemplate(); HttpHeaders headers = new HttpHeaders();
			 * headers.setContentType(MediaType.APPLICATION_JSON);
			 * HttpEntity<ProductRequest> request = new
			 * HttpEntity<ProductRequest>(productDtos, headers); ProductResponse response =
			 * restTemplate.postForObject(CONTEXT_PATH +
			 * REST_CONTROLLER_URL.SUBMIT_SELECTED_ITEMS, request, ProductResponse.class);
			 * System.out.println(response);
			 */
			return gson.fromJson(response.toString(), ProductResponse.class);
		} catch (Exception e) {
			return new ProductResponse();
		}
	}

	public ProductDto find(int id) {
		ProductDto productDto = new ProductDto();
		productDto.setId(1);
		productDto.setName("item");
		productDto.setPrice(100);
		return productDto;
	}

}
