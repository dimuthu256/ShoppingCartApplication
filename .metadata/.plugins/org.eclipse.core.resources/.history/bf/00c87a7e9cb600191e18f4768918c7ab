package com.org.shoppingcart.core.controller;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.amqp.core.Message;
import org.springframework.amqp.rabbit.listener.api.ChannelAwareMessageListener;
import org.springframework.amqp.support.converter.MessageConverter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.org.shoppingcart.core.request.ProductRequest;
import com.org.shoppingcart.core.service.ShoppingCartService;
import com.rabbitmq.client.Channel;
import com.spring.amq.util.GsonUtil;

@Component
public class ShoppingCartMessageListener implements ChannelAwareMessageListener {
	private Logger logger;
	private MessageConverter messageConverter;
	
	@Autowired
	private ShoppingCartService shoppingCartService;
	
	public ShoppingCartMessageListener(MessageConverter messageConverter,ShoppingCartService shoppingCartService){
		this.logger = LoggerFactory.getLogger(this.getClass());
		this.messageConverter = messageConverter;
		this.shoppingCartService = shoppingCartService;
	}
	
	@Override
	public void onMessage(Message message, Channel channel) throws Exception {
		logger.info("Message received.");		
		try {
			logger.info("Cosumer response string {}",this.messageConverter.fromMessage(message).toString());
			ProductRequest request = GsonUtil.getFromObject(this.messageConverter.fromMessage(message).toString(), ProductRequest.class);
			logger.info("Cosumer response {} - {} - {}", content.getMessage(), content.getMobileNumber(), content.getName());
			shoppingCartService.saveAll(request);
			System.out.println("Message Receiverd : channel close" );
			// Acknowledge to delete from the queue
			channel.basicAck(message.getMessageProperties().getDeliveryTag(), false);

		} catch (Exception e) {
			System.out.println("Error..........");
			e.printStackTrace();
		}
	}

}
