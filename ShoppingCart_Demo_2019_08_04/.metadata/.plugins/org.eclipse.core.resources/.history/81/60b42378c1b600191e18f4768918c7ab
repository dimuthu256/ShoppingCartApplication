package com.org.shoppingcart.service.impl;

import java.net.URL;
import java.util.Collections;

import org.apache.log4j.Logger;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

import com.org.shoppingcart.controller.util.GsonUtil;
import com.org.shoppingcart.controller.util.ServiceManager;
import com.org.shoppingcart.dto.ProductDto;
import com.org.shoppingcart.request.ProductRequest;
import com.org.shoppingcart.response.ProductResponse;

public class ProductServiceImpl extends ServiceManager {

	private static final long serialVersionUID = 1L;
	private static final Logger logger = Logger.getLogger(ProductServiceImpl.class);

	public ProductResponse findAll() {
		try {
			final String restURL = getValMessage().getString("shopping.cart.rest.url")
					+ getValMessage().getString("shopping.cart.getallitems.url");
			logger.info("Find All Rest Service URL :" + restURL);
			restTemplate = new RestTemplate();
			String strResponse = restTemplate.getForObject(restURL, String.class);
			logger.info("Find All Response :" + strResponse);
			return GsonUtil.getFromObject(strResponse, ProductResponse.class);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return new ProductResponse();
	}

	public ProductResponse checkoutItems(ProductRequest productDtos) {
		try {

			final String restURL = getValMessage().getString("shopping.cart.rest.url")
					+ getValMessage().getString("shopping.cart.submititems.url");
			logger.info("Submit All Rest Service URL :" + restURL);
			RestTemplate restTemplate = new RestTemplate();

			HttpHeaders headers = new HttpHeaders();
			headers.setContentType(MediaType.APPLICATION_JSON);
			headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON));

			String request = GsonUtil.getToString(productDtos, ProductRequest.class);
			// send request and parse result
			//HttpEntity<String> entity = new HttpEntity<String>(request, headers);
			// ResponseEntity<String> response = restTemplate.exchange(restURL,
			// HttpMethod.POST, entity, String.class);
			String response = restTemplate.postForObject(restURL, request, String.class);
			if (response != null) {
				return GsonUtil.getFromObject(response, ProductResponse.class);
			}

			return new ProductResponse();
		} catch (Exception e) {
			return new ProductResponse();
		}
	}

	

}
